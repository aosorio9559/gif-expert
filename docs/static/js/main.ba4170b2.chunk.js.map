{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","category","a","encodeURI","url","fetch","response","ok","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","getGifs","then","GifGridItem","className","src","alt","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVR,SAAsBC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAf1C,SAA2BP,GACzBF,EAAcE,EAAEQ,OAAOF,a,2ECPpB,WAAuBG,GAAvB,uBAAAC,EAAA,6DACLD,EAAWE,UAAUF,GACfG,EAFD,0FAE0FH,EAF1F,sBAIkBI,MAAMD,GAJxB,WAICE,EAJD,QAMSC,GANT,yCAOI,IAPJ,uBASkBD,EAASE,OAT3B,uBASGC,EATH,EASGA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAdhC,kBAkBEM,GAlBF,6C,sBCGA,SAASO,EAAahB,GAC3B,MAA0Bb,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,YDTL,SAAP,mCCUIC,CAAQrB,GAAUsB,MAAK,SAACX,GACtBQ,EAAS,CACPX,KAAMG,EACNM,SAAS,SAGZ,CAACjB,IAEGkB,EChBF,IAAMK,EAAc,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKqB,UAAU,6CAAf,UACE,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCFGc,EAAU,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SACxB,EAAkCgB,EAAahB,GAAjCc,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAEtB,OACE,qCACE,6BAAKjB,IACJiB,GAAW,wCACZ,qBAAKO,UAAU,YAAf,SACGV,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCTnBgB,EAAe,WAE1B,MAAoCzC,mBAAS,CAAC,YAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGCS,EAAWe,KAAI,SAACV,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,UCf7B6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ba4170b2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  function handleInputChange(e) {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export async function getGifs(category) {\r\n  category = encodeURI(category);\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=m9eE327ieWeSq4mGSlPvS9u8LcIB6zBI&q=${category}&limit=10`;\r\n\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    return [];\r\n  }\r\n  const { data } = await response.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport function useFetchGifs(category) {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((img) => {\r\n      setState({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n}\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  // const categories = [\"One punch\", \"Samurai X\", \"Dragon Ball\"];\r\n  const [categories, setCategories] = useState([\"FIFA 21\"]);\r\n\r\n  function handleAdd() {\r\n    setCategories([...categories, \"HOLA\"]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n      {categories.map((category) => {\r\n        return <GifGrid key={category} category={category} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}